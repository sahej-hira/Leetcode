# Moore voting algorithm:

class Solution:
    def majorityElement(self, nums: List[int]) -> int:
        count,candidate = 0,0

        for num in nums:
            if count == 0:
                candidate = num

            if num == candidate:
                count += 1
            else:
                count -=1

            '''
            explanation:
            
            print("num:",num)
            print("count:",count)
            print("candidate:",candidate)
            '''
            

        return candidate




'''
# use a frequency hashmap
# just figure the element that has max frequncy and return
# since "the majority element always exists in the array" 

class Solution:
    def majorityElement(self, nums: List[int]) -> int:
        dic = {}

        for i in nums:
            if i in dic:
                dic[i] += 1
                continue
            dic[i] = 1
        val = max(dic.values())       # we hav to return the key.
        for key in dic:
            if val == dic.get(key):
                return key
'''

